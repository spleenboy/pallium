{"_id":"2eNjbNNTjHVcJdfv","contentType":"page","dirty":false,"title":"Field Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"field-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/field-types.md","metadata":{"Sequence":"3"},"values":{"title":"Field Types","template":"index.jade","sequence":3,"content":""}}
{"_id":"Ujg1iGixjNQ8sBFr","contentType":"page","dirty":false,"title":"Project File Format","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"project-file-format.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/project-file-format.md","metadata":{"Sequence":"1"},"values":{"title":"Project File Format","template":"index.jade","sequence":1,"content":"A Pallium project file is just a specially-formatted JSON file that defines how Pallium should display and store JSON or YAML-formatted files.\n\n\n## Document Root\nAt the root of the project file, you'll include some general information and a `contentTypes` object, which defines all of the content types that will be included in your project. Optionally, you may include a `references` object, which is just a way of creating snippets for re-use across multiple `contentType` definitions.\n\n```\n{\n  \"title\": \"Pallium Documentation\",\n  \"description\": \"Provide documentation for the Pallium application.\",\n  \"icon\": \"redeem\",\n  \"contentDirectory\": [\"content\"],\n  \"assetDirectory\": [\"content\", \"assets\"],\n  \"database\": [\"content\", \"index.db\"],\n  \"references\": {...},\n  \"contentTypes\": {...}\n}\n```\n### title\nThe title will identify your project.\n\n### description\nThis will appear below the title of your project on the home page of the Pallium app.\n\n\n### icon\nYou may use any class name from [Google's material design icon set](https://design.google.com/icons/) here.\n\n### contentDirectory\nThis array indicates the path (relative to the project file) where files managed by the project will be stored. Because this is a cross-platform application, you should save each directory as a separate item in the array. The application will handle joining the directories together in the right way for the OS being used.\n\n### assetDirectory\nLike the `contentDirectory`, this is a relative path used to store any files uploaded to the project.\n\n### database\nPallium uses a embedded NoSQL database to store information about your project files. This set of relative directories and a file name tells Pallium where to save this database file.\n\n### [references](./references)\nReferences are an advanced feature that you may use to store snippets of JSON for reuse within the `contentTypes` object.\n\n### [contentTypes](./content-types)\nEach content type may have a different set of fields, storage settings and file format. If you're setting up a project for a blog, for example, you may have content types for posts, external links, static pages, etc."}}
{"_id":"XYqakXQAfwiHlOq4","contentType":"page","dirty":false,"title":"Overview","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"overview.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/overview.md","metadata":{"Sequence":"0"},"values":{"title":"Overview","template":"index.jade","sequence":0,"content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n## Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n## Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"_id":"eLg6FFtwzIoDW50D","contentType":"page","dirty":false,"title":"References","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"references.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/references.md","metadata":{"Sequence":"4"},"values":{"title":"References","template":"index.jade","sequence":4,"content":"Whenever you what to use a reference instead of a value, you'll write `{\"reference\": \"reference_key\"}`, where `reference_key` is the key you gave this snippet of JSON. For example, this:\n\n```\n{\n  \"references\": {\n    \"slug\": [\n      {\n        \"type\": \"required\"\n      },\n      {\n        \"type\": \"pattern\",\n        \"value\": \"^[a-z\\-]+$\"\n      }\n      ]\n    }\n  }\n```\n\nWill let you define a title field in a contentType like this:\n\n```\n{\n  \"contentTypes\": [\n    {\n      \"fields\": [\n        {\n          \"name\": \"url\",\n          \"label\": \"URL\",\n          \"validation\": {\n            \"reference\": \"slug\"\n          }\n      ]\n    }\n  ]\n}\n```"}}
{"_id":"wv6at3GFWrgE5MIl","contentType":"page","dirty":false,"title":"Content Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"content-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/content-types.md","metadata":{"Sequence":"2"},"values":{"title":"Content Types","template":"index.jade","sequence":2,"content":""}}
{"$$indexCreated":{"fieldName":"values.content","unique":false,"sparse":true}}
{"_id":"XYqakXQAfwiHlOq4","contentType":"page","dirty":false,"title":"Overview","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"overview.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/overview.md","metadata":{"Sequence":"0"},"values":{"title":"Overview","slug":{"type":"kebab","field":"title"},"sequence":0,"content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n## Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n## Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"_id":"Ujg1iGixjNQ8sBFr","contentType":"page","dirty":false,"title":"Project File Format","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"project-file-format.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/project-file-format.md","metadata":{"Sequence":"1"},"values":{"title":"Project File Format","slug":{"type":"kebab","field":"title"},"sequence":1,"content":"A Pallium project file is just a specially-formatted JSON file that defines how Pallium should display and store JSON or YAML-formatted files.\n\n\n## Document Root\nAt the root of the project file, you'll include some general information and a `contentTypes` object, which defines all of the content types that will be included in your project. Optionally, you may include a `references` object, which is just a way of creating snippets for re-use across multiple `contentType` definitions.\n\n```\n{\n  \"title\": \"Pallium Documentation\",\n  \"description\": \"Provide documentation for the Pallium application.\",\n  \"icon\": \"redeem\",\n  \"contentDirectory\": [\"content\"],\n  \"assetDirectory\": [\"content\", \"assets\"],\n  \"database\": [\"content\", \"index.db\"],\n  \"references\": {...},\n  \"contentTypes\": {...}\n}\n```\n### title\nThe title will identify your project.\n\n### description\nThis will appear below the title of your project on the home page of the Pallium app.\n\n\n### icon\nYou may use any class name from [Google's material design icon set](https://design.google.com/icons/) here.\n\n### contentDirectory\nThis array indicates the path (relative to the project file) where files managed by the project will be stored. Because this is a cross-platform application, you should save each directory as a separate item in the array. The application will handle joining the directories together in the right way for the OS being used.\n\n### assetDirectory\nLike the `contentDirectory`, this is a relative path used to store any files uploaded to the project.\n\n### database\nPallium uses a embedded NoSQL database to store information about your project files. This set of relative directories and a file name tells Pallium where to save this database file.\n\n### [references](./references)\nReferences are an advanced feature that you may use to store snippets of JSON for reuse within the `contentTypes` object.\n\n### [contentTypes](./content-types)\nEach content type may have a different set of fields, storage settings and file format. If you're setting up a project for a blog, for example, you may have content types for posts, external links, static pages, etc."}}
{"_id":"wv6at3GFWrgE5MIl","contentType":"page","dirty":false,"title":"Content Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"content-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/content-types.md","metadata":{"Sequence":"2"},"values":{"title":"Content Types","slug":{"type":"kebab","field":"title"},"sequence":2,"content":""}}
{"_id":"2eNjbNNTjHVcJdfv","contentType":"page","dirty":false,"title":"Field Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"field-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/field-types.md","metadata":{"Sequence":"3"},"values":{"title":"Field Types","slug":{"type":"kebab","field":"title"},"sequence":3,"content":""}}
{"_id":"eLg6FFtwzIoDW50D","contentType":"page","dirty":false,"title":"References","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"references.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/references.md","metadata":{"Sequence":"4"},"values":{"title":"References","slug":{"type":"kebab","field":"title"},"sequence":4,"content":"Whenever you what to use a reference instead of a value, you'll write `{\"reference\": \"reference_key\"}`, where `reference_key` is the key you gave this snippet of JSON. For example, this:\n\n```\n{\n  \"references\": {\n    \"slug\": [\n      {\n        \"type\": \"required\"\n      },\n      {\n        \"type\": \"pattern\",\n        \"value\": \"^[a-z\\-]+$\"\n      }\n      ]\n    }\n  }\n```\n\nWill let you define a title field in a contentType like this:\n\n```\n{\n  \"contentTypes\": [\n    {\n      \"fields\": [\n        {\n          \"name\": \"url\",\n          \"label\": \"URL\",\n          \"validation\": {\n            \"reference\": \"slug\"\n          }\n      ]\n    }\n  ]\n}\n```"}}
{"_id":"XYqakXQAfwiHlOq4","contentType":"page","dirty":false,"title":"Overview","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"overview.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/overview.md","metadata":{"Sequence":"0"},"values":{"title":"Overview","slug":"overview","sequence":0,"content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n## Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n## Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"_id":"Ujg1iGixjNQ8sBFr","contentType":"page","dirty":false,"title":"Project File Format","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"project-file-format.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/project-file-format.md","metadata":{"Sequence":"1"},"values":{"title":"Project File Format","slug":"file-format","sequence":1,"content":"A Pallium project file is just a specially-formatted JSON file that defines how Pallium should display and store JSON or YAML-formatted files.\n\n\n## Document Root\nAt the root of the project file, you'll include some general information and a `contentTypes` object, which defines all of the content types that will be included in your project. Optionally, you may include a `references` object, which is just a way of creating snippets for re-use across multiple `contentType` definitions.\n\n```\n{\n  \"title\": \"Pallium Documentation\",\n  \"description\": \"Provide documentation for the Pallium application.\",\n  \"icon\": \"redeem\",\n  \"contentDirectory\": [\"content\"],\n  \"assetDirectory\": [\"content\", \"assets\"],\n  \"database\": [\"content\", \"index.db\"],\n  \"references\": {...},\n  \"contentTypes\": {...}\n}\n```\n### title\nThe title will identify your project.\n\n### description\nThis will appear below the title of your project on the home page of the Pallium app.\n\n\n### icon\nYou may use any class name from [Google's material design icon set](https://design.google.com/icons/) here.\n\n### contentDirectory\nThis array indicates the path (relative to the project file) where files managed by the project will be stored. Because this is a cross-platform application, you should save each directory as a separate item in the array. The application will handle joining the directories together in the right way for the OS being used.\n\n### assetDirectory\nLike the `contentDirectory`, this is a relative path used to store any files uploaded to the project.\n\n### database\nPallium uses a embedded NoSQL database to store information about your project files. This set of relative directories and a file name tells Pallium where to save this database file.\n\n### [references](./references)\nReferences are an advanced feature that you may use to store snippets of JSON for reuse within the `contentTypes` object.\n\n### [contentTypes](./content-types)\nEach content type may have a different set of fields, storage settings and file format. If you're setting up a project for a blog, for example, you may have content types for posts, external links, static pages, etc."}}
{"_id":"Ujg1iGixjNQ8sBFr","contentType":"page","dirty":false,"title":"Project File Format","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"project-file-format.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/project-file-format.md","metadata":{"Sequence":"1"},"values":{"title":"Project File Format","slug":"project-file-format","sequence":1,"content":"A Pallium project file is just a specially-formatted JSON file that defines how Pallium should display and store JSON or YAML-formatted files.\n\n\n## Document Root\nAt the root of the project file, you'll include some general information and a `contentTypes` object, which defines all of the content types that will be included in your project. Optionally, you may include a `references` object, which is just a way of creating snippets for re-use across multiple `contentType` definitions.\n\n```\n{\n  \"title\": \"Pallium Documentation\",\n  \"description\": \"Provide documentation for the Pallium application.\",\n  \"icon\": \"redeem\",\n  \"contentDirectory\": [\"content\"],\n  \"assetDirectory\": [\"content\", \"assets\"],\n  \"database\": [\"content\", \"index.db\"],\n  \"references\": {...},\n  \"contentTypes\": {...}\n}\n```\n### title\nThe title will identify your project.\n\n### description\nThis will appear below the title of your project on the home page of the Pallium app.\n\n\n### icon\nYou may use any class name from [Google's material design icon set](https://design.google.com/icons/) here.\n\n### contentDirectory\nThis array indicates the path (relative to the project file) where files managed by the project will be stored. Because this is a cross-platform application, you should save each directory as a separate item in the array. The application will handle joining the directories together in the right way for the OS being used.\n\n### assetDirectory\nLike the `contentDirectory`, this is a relative path used to store any files uploaded to the project.\n\n### database\nPallium uses a embedded NoSQL database to store information about your project files. This set of relative directories and a file name tells Pallium where to save this database file.\n\n### [references](./references)\nReferences are an advanced feature that you may use to store snippets of JSON for reuse within the `contentTypes` object.\n\n### [contentTypes](./content-types)\nEach content type may have a different set of fields, storage settings and file format. If you're setting up a project for a blog, for example, you may have content types for posts, external links, static pages, etc."}}
{"_id":"wv6at3GFWrgE5MIl","contentType":"page","dirty":false,"title":"Content Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"content-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/content-types.md","metadata":{"Sequence":"2"},"values":{"title":"Content Types","slug":"content-types","sequence":2,"content":""}}
{"_id":"2eNjbNNTjHVcJdfv","contentType":"page","dirty":false,"title":"Field Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"field-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/field-types.md","metadata":{"Sequence":"3"},"values":{"title":"Field Types","slug":"field-types","sequence":3,"content":""}}
{"_id":"eLg6FFtwzIoDW50D","contentType":"page","dirty":false,"title":"References","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"references.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/references.md","metadata":{"Sequence":"4"},"values":{"title":"References","slug":"references","sequence":4,"content":"Whenever you what to use a reference instead of a value, you'll write `{\"reference\": \"reference_key\"}`, where `reference_key` is the key you gave this snippet of JSON. For example, this:\n\n```\n{\n  \"references\": {\n    \"slug\": [\n      {\n        \"type\": \"required\"\n      },\n      {\n        \"type\": \"pattern\",\n        \"value\": \"^[a-z\\-]+$\"\n      }\n      ]\n    }\n  }\n```\n\nWill let you define a title field in a contentType like this:\n\n```\n{\n  \"contentTypes\": [\n    {\n      \"fields\": [\n        {\n          \"name\": \"url\",\n          \"label\": \"URL\",\n          \"validation\": {\n            \"reference\": \"slug\"\n          }\n      ]\n    }\n  ]\n}\n```"}}
{"_id":"XYqakXQAfwiHlOq4","contentType":"page","dirty":false,"title":"Overview","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"overview.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/overview.md","metadata":{"Sequence":"0"},"values":{"title":"Overview","slug":"overview","sequence":0,"content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n### Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n### Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"_id":"Ujg1iGixjNQ8sBFr","contentType":"page","dirty":false,"title":"Project File Format","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"project-file-format.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/project-file-format.md","metadata":{"Sequence":"1"},"values":{"title":"Project File Format","slug":"project-file-format","sequence":1,"content":"A Pallium project file is just a specially-formatted JSON file that defines how Pallium should display and store JSON or YAML-formatted files.\n\n\n### Document Root\nAt the root of the project file, you'll include some general information and a `contentTypes` object, which defines all of the content types that will be included in your project. Optionally, you may include a `references` object, which is just a way of creating snippets for re-use across multiple `contentType` definitions.\n\n```\n{\n  \"title\": \"Pallium Documentation\",\n  \"description\": \"Provide documentation for the Pallium application.\",\n  \"icon\": \"redeem\",\n  \"contentDirectory\": [\"content\"],\n  \"assetDirectory\": [\"content\", \"assets\"],\n  \"database\": [\"content\", \"index.db\"],\n  \"references\": {...},\n  \"contentTypes\": {...}\n}\n```\n#### title\nThe title will identify your project.\n\n#### description\nThis will appear below the title of your project on the home page of the Pallium app.\n\n\n#### icon\nYou may use any class name from [Google's material design icon set](https://design.google.com/icons/) here.\n\n#### contentDirectory\nThis array indicates the path (relative to the project file) where files managed by the project will be stored. Because this is a cross-platform application, you should save each directory as a separate item in the array. The application will handle joining the directories together in the right way for the OS being used.\n\n#### assetDirectory\nLike the `contentDirectory`, this is a relative path used to store any files uploaded to the project.\n\n#### database\nPallium uses a embedded NoSQL database to store information about your project files. This set of relative directories and a file name tells Pallium where to save this database file.\n\n#### [references](./references)\nReferences are an advanced feature that you may use to store snippets of JSON for reuse within the `contentTypes` object.\n\n#### [contentTypes](./content-types)\nEach content type may have a different set of fields, storage settings and file format. If you're setting up a project for a blog, for example, you may have content types for posts, external links, static pages, etc."}}
{"_id":"XYqakXQAfwiHlOq4","contentType":"page","dirty":false,"title":"Overview","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"overview.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/overview.md","metadata":{"Sequence":"0"},"values":{"title":"Overview","slug":"overview","sequence":0,"content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n### Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n### Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"_id":"XYqakXQAfwiHlOq4","contentType":"page","dirty":false,"title":"Overview","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"overview.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/overview.md","metadata":{"Sequence":"0"},"values":{"title":"Overview","slug":"overview","template":"page.jade","filename":"/:file/index.html","sequence":0,"content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n### Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n### Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"_id":"Ujg1iGixjNQ8sBFr","contentType":"page","dirty":false,"title":"Project File Format","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"project-file-format.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/project-file-format.md","metadata":{"Sequence":"1"},"values":{"title":"Project File Format","slug":"project-file-format","template":"page.jade","filename":"/:file/index.html","sequence":1,"content":"A Pallium project file is just a specially-formatted JSON file that defines how Pallium should display and store JSON or YAML-formatted files.\n\n\n### Document Root\nAt the root of the project file, you'll include some general information and a `contentTypes` object, which defines all of the content types that will be included in your project. Optionally, you may include a `references` object, which is just a way of creating snippets for re-use across multiple `contentType` definitions.\n\n```\n{\n  \"title\": \"Pallium Documentation\",\n  \"description\": \"Provide documentation for the Pallium application.\",\n  \"icon\": \"redeem\",\n  \"contentDirectory\": [\"content\"],\n  \"assetDirectory\": [\"content\", \"assets\"],\n  \"database\": [\"content\", \"index.db\"],\n  \"references\": {...},\n  \"contentTypes\": {...}\n}\n```\n#### title\nThe title will identify your project.\n\n#### description\nThis will appear below the title of your project on the home page of the Pallium app.\n\n\n#### icon\nYou may use any class name from [Google's material design icon set](https://design.google.com/icons/) here.\n\n#### contentDirectory\nThis array indicates the path (relative to the project file) where files managed by the project will be stored. Because this is a cross-platform application, you should save each directory as a separate item in the array. The application will handle joining the directories together in the right way for the OS being used.\n\n#### assetDirectory\nLike the `contentDirectory`, this is a relative path used to store any files uploaded to the project.\n\n#### database\nPallium uses a embedded NoSQL database to store information about your project files. This set of relative directories and a file name tells Pallium where to save this database file.\n\n#### [references](./references)\nReferences are an advanced feature that you may use to store snippets of JSON for reuse within the `contentTypes` object.\n\n#### [contentTypes](./content-types)\nEach content type may have a different set of fields, storage settings and file format. If you're setting up a project for a blog, for example, you may have content types for posts, external links, static pages, etc."}}
{"_id":"wv6at3GFWrgE5MIl","contentType":"page","dirty":false,"title":"Content Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"content-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/content-types.md","metadata":{"Sequence":"2"},"values":{"title":"Content Types","slug":"content-types","template":"page.jade","filename":"/:file/index.html","sequence":2,"content":""}}
{"_id":"2eNjbNNTjHVcJdfv","contentType":"page","dirty":false,"title":"Field Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"field-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/field-types.md","metadata":{"Sequence":"3"},"values":{"title":"Field Types","slug":"field-types","template":"page.jade","filename":"/:file/index.html","sequence":3,"content":""}}
{"_id":"eLg6FFtwzIoDW50D","contentType":"page","dirty":false,"title":"References","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"references.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/references.md","metadata":{"Sequence":"4"},"values":{"title":"References","slug":"references","template":"page.jade","filename":"/:file/index.html","sequence":4,"content":"Whenever you what to use a reference instead of a value, you'll write `{\"reference\": \"reference_key\"}`, where `reference_key` is the key you gave this snippet of JSON. For example, this:\n\n```\n{\n  \"references\": {\n    \"slug\": [\n      {\n        \"type\": \"required\"\n      },\n      {\n        \"type\": \"pattern\",\n        \"value\": \"^[a-z\\-]+$\"\n      }\n      ]\n    }\n  }\n```\n\nWill let you define a title field in a contentType like this:\n\n```\n{\n  \"contentTypes\": [\n    {\n      \"fields\": [\n        {\n          \"name\": \"url\",\n          \"label\": \"URL\",\n          \"validation\": {\n            \"reference\": \"slug\"\n          }\n      ]\n    }\n  ]\n}\n```"}}
{"_id":"tU2wSnskY8fWOKwd","contentType":"home","dirty":false,"title":"Home","directory":"","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"index.md.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/index.md.md","metadata":{},"values":{"title":"Home Page","slug":"home","template":"index.jade","filename":"/index.html","content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n### Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n### Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"$$deleted":true,"_id":"XYqakXQAfwiHlOq4"}
{"_id":"tU2wSnskY8fWOKwd","contentType":"home","dirty":false,"title":"Overview","directory":"","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"index.md.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/index.md.md","metadata":{},"values":{"title":"Overview","slug":"home","template":"index.jade","filename":"/index.html","content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n### Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n### Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"_id":"tU2wSnskY8fWOKwd","contentType":"home","dirty":false,"title":"Overview","directory":"","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"index.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/index.md","metadata":{},"values":{"title":"Overview","slug":"home","template":"index.jade","filename":"/index.html","content":"Pallium is a cross-platform desktop editor for JSON and YAML files. This application use a specially-formatted project file to present you with one or more custom forms.\n\nBecause of its flexible project format, it can be used for multiple purposes.\n\n### Website Content Management\nIt makes a great light-weight **content editor for websites**. This was its original purpose, actually. Combine it with a static site generator, such as Jekyl, Sculpin or Wintersmith, and you've got an easy to edit, static site on your hands. If you're reading this documentation in a browser, you're seeing the result of this workflow.\n\n### Note-taking\nPallium uses your filesystem and plain text files as its source of content. It includes an easy-to-use Markdown editor. Set up a configuration file that uses a synchronized directory, such as Dropbox or Google Drive, and you have a great tool for quick note taking."}}
{"_id":"Ujg1iGixjNQ8sBFr","contentType":"page","dirty":false,"title":"Project File Format","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"project-file-format.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/project-file-format.md","metadata":{"Sequence":"1"},"values":{"title":"Project File Format","slug":"project-file-format","template":"page.jade","filename":"/:file/index.html","sequence":1,"content":"A Pallium project file is just a specially-formatted JSON file that defines how Pallium should display and store JSON or YAML-formatted files.\n\n\n### Document Root\nAt the root of the project file, you'll include some general information and a `contentTypes` object, which defines all of the content types that will be included in your project. Optionally, you may include a `references` object, which is just a way of creating snippets for re-use across multiple `contentType` definitions.\n\n```\n{\n  \"title\": \"Pallium Documentation\",\n  \"description\": \"Provide documentation for the Pallium application.\",\n  \"icon\": \"redeem\",\n  \"contentDirectory\": [\"content\"],\n  \"assetDirectory\": [\"content\", \"assets\"],\n  \"database\": [\"content\", \"index.db\"],\n  \"references\": {...},\n  \"contentTypes\": {...}\n}\n```\n#### title\nThe title will identify your project.\n\n#### description\nThis will appear below the title of your project on the home page of the Pallium app.\n\n\n#### icon\nYou may use any class name from [Google's material design icon set](https://design.google.com/icons/) here.\n\n#### contentDirectory\nThis array indicates the path (relative to the project file) where files managed by the project will be stored. Because this is a cross-platform application, you should save each directory as a separate item in the array. The application will handle joining the directories together in the right way for the OS being used.\n\n#### assetDirectory\nLike the `contentDirectory`, this is a relative path used to store any files uploaded to the project.\n\n#### database\nPallium uses a embedded NoSQL database to store information about your project files. This set of relative directories and a file name tells Pallium where to save this database file.\n\n#### [references](/references/)\nReferences are an advanced feature that you may use to store snippets of JSON for reuse within the `contentTypes` object.\n\n#### [contentTypes](/content-types/)\nEach content type may have a different set of fields, storage settings and file format. If you're setting up a project for a blog, for example, you may have content types for posts, external links, static pages, etc."}}
{"_id":"wv6at3GFWrgE5MIl","contentType":"page","dirty":false,"title":"Content Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"content-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/content-types.md","metadata":{"Sequence":"2"},"values":{"title":"Content Types","slug":"content-types","template":"page.jade","filename":"/:file/index.html","sequence":2,"content":"Each content type may have a different set of fields and rules for how and where content is saved. For example, this is the content type for `Pages`, which are used for this documentation.\n\n```\n\"contentTypes\": [\n    {\n      \"settings\": {\n        \"title\": \"Page\",\n        \"plural\": \"Pages\",\n        \"handle\": \"page\",\n        \"description\": \"Main pages\",\n        \"icon\": \"description\",\n        \"orderBy\": [\"values.sequence\", \"values.title\"],\n        \"orderDirection\": [false, true]\n      },\n      \"storage\": {\n        \"contentKey\": \"content\",\n        \"format\": \"yaml\",\n        \"extension\": \"md\",\n        \"directory\": [\"pages\"],\n        \"metadata\": {\n            \"Sequence\": {\"type\": \"reflect\", \"field\": \"sequence\"}\n        },\n        \"filename\": [\n          {\n            \"type\": \"kebab\",\n            \"field\": \"title\"\n          }\n        ],\n        \"title\": [\n          {\n            \"type\": \"reflect\",\n            \"field\": \"title\"\n          }\n        ]\n      },\n      \"fields\": [\n        {\n          \"type\": \"text\",\n          \"label\": \"Title\",\n          \"name\": \"title\",\n          \"defaultValue\": \"New Page\",\n          \"validation\": [\n            {\"type\": \"required\"}\n          ]\n        },\n        {\n          \"type\": \"text\",\n          \"name\": \"slug\",\n          \"label\": \"Slug\",\n          \"hint\": \"A short identifier\",\n          \"validation\": [\n            {\"type\": \"required\"}\n          ]\n        },\n        {\n            \"type\": \"hidden\",\n            \"name\": \"template\",\n            \"value\": \"page.jade\"\n        },\n        {\n            \"type\": \"hidden\",\n            \"name\": \"filename\",\n            \"value\": \"/:file/index.html\"\n        },\n        {\n          \"type\": \"number\",\n          \"label\": \"Sequence\",\n          \"name\": \"sequence\",\n          \"defaultValue\": 0\n        },\n        {\n          \"type\": \"md\",\n          \"label\": \"Content\",\n          \"name\": \"content\"\n        }\n      ]\n    }\n]\n```"}}
{"_id":"wv6at3GFWrgE5MIl","contentType":"page","dirty":false,"title":"Content Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"content-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/content-types.md","metadata":{"Sequence":"2"},"values":{"title":"Content Types","slug":"content-types","template":"page.jade","filename":"/:file/index.html","sequence":2,"content":"Each content type may have a different set of fields and rules for how and where content is saved. For example, this is the content type for `Pages`, which are used for this documentation.\n\n```\n\"contentTypes\": [\n    {\n      \"settings\": {\n        \"title\": \"Page\",\n        \"plural\": \"Pages\",\n        \"handle\": \"page\",\n        \"description\": \"Main pages\",\n        \"icon\": \"description\",\n        \"orderBy\": [\"values.sequence\", \"values.title\"],\n        \"orderDirection\": [false, true]\n      },\n      \"storage\": {\n        \"contentKey\": \"content\",\n        \"format\": \"yaml\",\n        \"extension\": \"md\",\n        \"directory\": [\"pages\"],\n        \"metadata\": {\n            \"Sequence\": {\n              \"type\": \"reflect\",\n              \"field\": \"sequence\"\n            }\n        },\n        \"filename\": [\n          {\n            \"type\": \"kebab\",\n            \"field\": \"title\"\n          }\n        ],\n        \"title\": [\n          {\n            \"type\": \"reflect\",\n            \"field\": \"title\"\n          }\n        ]\n      },\n      \"fields\": [...]\n    }\n]\n```"}}
{"_id":"wv6at3GFWrgE5MIl","contentType":"page","dirty":false,"title":"Content Types","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"content-types.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/content-types.md","metadata":{"Sequence":"2"},"values":{"title":"Content Types","slug":"content-types","template":"page.jade","filename":"/:file/index.html","sequence":2,"content":"Each content type may have a different set of fields and rules for how and where content is saved. For example, this is a portion of the content type for `Pages`, which are used for this documentation.\n\n```\n\"contentTypes\": [\n    {\n      \"settings\": {\n        \"title\": \"Page\",\n        \"plural\": \"Pages\",\n        \"handle\": \"page\",\n        \"description\": \"Main pages\",\n        \"icon\": \"description\",\n        \"orderBy\": [\"values.sequence\", \"values.title\"],\n        \"orderDirection\": [false, true]\n      },\n      \"storage\": {\n        \"contentKey\": \"content\",\n        \"format\": \"yaml\",\n        \"extension\": \"md\",\n        \"directory\": [\"pages\"],\n        \"metadata\": {\n            \"Sequence\": {\n              \"type\": \"reflect\",\n              \"field\": \"sequence\"\n            }\n        },\n        \"filename\": [\n          {\n            \"type\": \"kebab\",\n            \"field\": \"title\"\n          }\n        ],\n        \"title\": [\n          {\n            \"type\": \"reflect\",\n            \"field\": \"title\"\n          }\n        ]\n      },\n      \"fields\": [...]\n    }\n]\n```"}}
{"_id":"hwuJg9JC3raSiOLt","contentType":"fieldtype","dirty":false,"title":"Markup","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"markup.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/markup.md","metadata":{},"values":{"title":"Markup","example":"","content":""}}
{"_id":"0UtPf7km7Oon44AN","contentType":"fieldtype","dirty":false,"title":"Text","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"text.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/text.md","metadata":{},"values":{"title":"Text","example":"","content":""}}
{"_id":"1AmNZ8ZkmDvVqocI","contentType":"fieldtype","dirty":false,"title":"Array","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"array.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/array.md","metadata":{},"values":{"title":"Array","example":"","content":""}}
{"_id":"9zksuXo6SpZUMkNY","contentType":"fieldtype","dirty":false,"title":"Checkbox","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"checkbox.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/checkbox.md","metadata":{},"values":{"title":"Checkbox","example":"","content":""}}
{"_id":"CcFkkEs2pFjCPcZn","contentType":"fieldtype","dirty":false,"title":"Color","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"color.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/color.md","metadata":{},"values":{"title":"Color","example":"","content":""}}
{"_id":"HRb03T9CaXKJNNmf","contentType":"fieldtype","dirty":false,"title":"Collection","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"collection.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/collection.md","metadata":{},"values":{"title":"Collection","example":"","content":""}}
{"_id":"4ep1XTrfgKXq6hKl","contentType":"fieldtype","dirty":false,"title":"Date","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"date.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/date.md","metadata":{},"values":{"title":"Date","example":"","content":""}}
{"_id":"WR3YcDvoCC4NaQZM","contentType":"fieldtype","dirty":false,"title":"Email","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"email.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/email.md","metadata":{},"values":{"title":"Email","example":"","content":""}}
{"_id":"va2t5LlEMll2UIpt","contentType":"fieldtype","dirty":false,"title":"File","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"file.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/file.md","metadata":{},"values":{"title":"File","example":"","content":""}}
{"_id":"AHwCW6YUVbsh59PH","contentType":"fieldtype","dirty":false,"title":"Hidden","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"hidden.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/hidden.md","metadata":{},"values":{"title":"Hidden","example":"","content":""}}
{"_id":"qizOYEunS5OawhCs","contentType":"fieldtype","dirty":false,"title":"Month","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"month.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/month.md","metadata":{},"values":{"title":"Month","example":"","content":""}}
{"_id":"Yz26hYohmkDFj26s","contentType":"fieldtype","dirty":false,"title":"Markdown","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"markdown.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/markdown.md","metadata":{},"values":{"title":"Markdown","example":"","content":""}}
{"_id":"gjgCQ2GS3vG7IFsj","contentType":"fieldtype","dirty":false,"title":"Number","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"number.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/number.md","metadata":{},"values":{"title":"Number","example":"","content":""}}
{"_id":"EhzyZGVoFjqiLk6o","contentType":"fieldtype","dirty":false,"title":"Object","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"object.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/object.md","metadata":{},"values":{"title":"Object","example":"","content":""}}
{"_id":"biinytJKpb3fAmwf","contentType":"fieldtype","dirty":false,"title":"Object Array","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"object-array.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/object-array.md","metadata":{},"values":{"title":"Object Array","example":"","content":""}}
{"_id":"HcVeEcGqgkkzorHh","contentType":"fieldtype","dirty":false,"title":"Password","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"password.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/password.md","metadata":{},"values":{"title":"Password","example":"","content":""}}
{"_id":"2WlX9biqq55L0WaF","contentType":"fieldtype","dirty":false,"title":"Radio","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"radio.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/radio.md","metadata":{},"values":{"title":"Radio","example":"","content":""}}
{"_id":"msTufHKdt0J2V4dP","contentType":"fieldtype","dirty":false,"title":"Range","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"range.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/range.md","metadata":{},"values":{"title":"Range","example":"","content":""}}
{"_id":"TxSQeXjSNJRVfufF","contentType":"fieldtype","dirty":false,"title":"Select","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"select.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/select.md","metadata":{},"values":{"title":"Select","example":"","content":""}}
{"_id":"bc3H2zCXUO5UAPe0","contentType":"fieldtype","dirty":false,"title":"Textarea","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"textarea.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/textarea.md","metadata":{},"values":{"title":"Textarea","example":"","content":""}}
{"_id":"U7MSS2l4Wf84jAZl","contentType":"fieldtype","dirty":false,"title":"Time","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"time.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/time.md","metadata":{},"values":{"title":"Time","example":"","content":""}}
{"_id":"yrU4hastySBDGQ8d","contentType":"fieldtype","dirty":false,"title":"Toggle","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"toggle.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/toggle.md","metadata":{},"values":{"title":"Toggle","example":"","content":""}}
{"_id":"uzbsBY01qb9EmvZS","contentType":"fieldtype","dirty":false,"title":"Url","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"url.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/url.md","metadata":{},"values":{"title":"Url","example":"","content":""}}
{"_id":"ReN8LCxBHg9vaZc7","contentType":"fieldtype","dirty":false,"title":"Week","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"week.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/week.md","metadata":{},"values":{"title":"Week","example":"","content":""}}
{"_id":"1AmNZ8ZkmDvVqocI","contentType":"fieldtype","dirty":false,"title":"Array","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"array.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/array.md","metadata":{"Category":"Complex"},"values":{"title":"Array","example":"","category":"Complex","content":""}}
{"_id":"9zksuXo6SpZUMkNY","contentType":"fieldtype","dirty":false,"title":"Checkbox","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"checkbox.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/checkbox.md","metadata":{"Category":"Option Lists"},"values":{"title":"Checkbox","example":"","category":"Option Lists","content":""}}
{"_id":"HRb03T9CaXKJNNmf","contentType":"fieldtype","dirty":false,"title":"Collection","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"collection.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/collection.md","metadata":{"Category":"Complex"},"values":{"title":"Collection","example":"","category":"Complex","content":""}}
{"_id":"CcFkkEs2pFjCPcZn","contentType":"fieldtype","dirty":false,"title":"Color","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"color.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/color.md","metadata":{"Category":"Basic Text"},"values":{"title":"Color","example":"","category":"Basic Text","content":""}}
{"_id":"4ep1XTrfgKXq6hKl","contentType":"fieldtype","dirty":false,"title":"Date","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"date.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/date.md","metadata":{"Category":"Dates and Times"},"values":{"title":"Date","example":"","category":"Dates and Times","content":""}}
{"_id":"WR3YcDvoCC4NaQZM","contentType":"fieldtype","dirty":false,"title":"Email","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"email.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/email.md","metadata":{"Category":"Basic Text"},"values":{"title":"Email","example":"","category":"Basic Text","content":""}}
{"_id":"va2t5LlEMll2UIpt","contentType":"fieldtype","dirty":false,"title":"File","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"file.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/file.md","metadata":{"Category":"Complex"},"values":{"title":"File","example":"","category":"Complex","content":""}}
{"_id":"AHwCW6YUVbsh59PH","contentType":"fieldtype","dirty":false,"title":"Hidden","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"hidden.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/hidden.md","metadata":{"Category":"Basic Text"},"values":{"title":"Hidden","example":"","category":"Basic Text","content":""}}
{"_id":"Yz26hYohmkDFj26s","contentType":"fieldtype","dirty":false,"title":"Markdown","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"markdown.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/markdown.md","metadata":{"Category":"Basic Text"},"values":{"title":"Markdown","example":"","category":"Basic Text","content":""}}
{"_id":"hwuJg9JC3raSiOLt","contentType":"fieldtype","dirty":false,"title":"Markup","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"markup.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/markup.md","metadata":{"Category":"Basic Text"},"values":{"title":"Markup","example":"","category":"Basic Text","content":""}}
{"_id":"qizOYEunS5OawhCs","contentType":"fieldtype","dirty":false,"title":"Month","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"month.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/month.md","metadata":{"Category":"Dates and Times"},"values":{"title":"Month","example":"","category":"Dates and Times","content":""}}
{"_id":"gjgCQ2GS3vG7IFsj","contentType":"fieldtype","dirty":false,"title":"Number","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"number.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/number.md","metadata":{"Category":"Basic Text"},"values":{"title":"Number","example":"","category":"Basic Text","content":""}}
{"_id":"EhzyZGVoFjqiLk6o","contentType":"fieldtype","dirty":false,"title":"Object","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"object.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/object.md","metadata":{"Category":"Complex"},"values":{"title":"Object","example":"","category":"Complex","content":""}}
{"_id":"biinytJKpb3fAmwf","contentType":"fieldtype","dirty":false,"title":"Object Array","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"object-array.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/object-array.md","metadata":{"Category":"Complex"},"values":{"title":"Object Array","example":"","category":"Complex","content":""}}
{"_id":"HcVeEcGqgkkzorHh","contentType":"fieldtype","dirty":false,"title":"Password","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"password.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/password.md","metadata":{"Category":"Basic Text"},"values":{"title":"Password","example":"","category":"Basic Text","content":""}}
{"_id":"2WlX9biqq55L0WaF","contentType":"fieldtype","dirty":false,"title":"Radio","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"radio.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/radio.md","metadata":{"Category":"Option Lists"},"values":{"title":"Radio","example":"","category":"Option Lists","content":""}}
{"_id":"msTufHKdt0J2V4dP","contentType":"fieldtype","dirty":false,"title":"Range","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"range.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/range.md","metadata":{"Category":"Basic Text"},"values":{"title":"Range","example":"","category":"Basic Text","content":""}}
{"_id":"TxSQeXjSNJRVfufF","contentType":"fieldtype","dirty":false,"title":"Select","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"select.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/select.md","metadata":{"Category":"Option Lists"},"values":{"title":"Select","example":"","category":"Option Lists","content":""}}
{"_id":"0UtPf7km7Oon44AN","contentType":"fieldtype","dirty":false,"title":"Text","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"text.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/text.md","metadata":{"Category":"Basic Text"},"values":{"title":"Text","example":"","category":"Basic Text","content":""}}
{"_id":"bc3H2zCXUO5UAPe0","contentType":"fieldtype","dirty":false,"title":"Textarea","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"textarea.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/textarea.md","metadata":{"Category":"Basic Text"},"values":{"title":"Textarea","example":"","category":"Basic Text","content":""}}
{"_id":"U7MSS2l4Wf84jAZl","contentType":"fieldtype","dirty":false,"title":"Time","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"time.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/time.md","metadata":{"Category":"Dates and Times"},"values":{"title":"Time","example":"","category":"Dates and Times","content":""}}
{"_id":"yrU4hastySBDGQ8d","contentType":"fieldtype","dirty":false,"title":"Toggle","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"toggle.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/toggle.md","metadata":{"Category":"Basic Text"},"values":{"title":"Toggle","example":"","category":"Basic Text","content":""}}
{"_id":"uzbsBY01qb9EmvZS","contentType":"fieldtype","dirty":false,"title":"Url","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"url.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/url.md","metadata":{"Category":"Basic Text"},"values":{"title":"Url","example":"","category":"Basic Text","content":""}}
{"_id":"ReN8LCxBHg9vaZc7","contentType":"fieldtype","dirty":false,"title":"Week","directory":"fieldtypes","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"week.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/fieldtypes/week.md","metadata":{"Category":"Dates and Times"},"values":{"title":"Week","example":"","category":"Dates and Times","content":""}}
{"_id":"VHsQ7PCIH6MdP4cq","contentType":"page","dirty":false,"title":"Reflection","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"reflection.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/reflection.md","metadata":{"Sequence":"4"},"values":{"title":"Reflection","slug":"reflection","template":"page.jade","filename":"/:file/index.html","sequence":4,"content":""}}
{"_id":"eLg6FFtwzIoDW50D","contentType":"page","dirty":false,"title":"References","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"references.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/references.md","metadata":{"Sequence":"5"},"values":{"title":"References","slug":"references","template":"page.jade","filename":"/:file/index.html","sequence":5,"content":"Whenever you what to use a reference instead of a value, you'll write `{\"reference\": \"reference_key\"}`, where `reference_key` is the key you gave this snippet of JSON. For example, this:\n\n```\n{\n  \"references\": {\n    \"slug\": [\n      {\n        \"type\": \"required\"\n      },\n      {\n        \"type\": \"pattern\",\n        \"value\": \"^[a-z\\-]+$\"\n      }\n      ]\n    }\n  }\n```\n\nWill let you define a title field in a contentType like this:\n\n```\n{\n  \"contentTypes\": [\n    {\n      \"fields\": [\n        {\n          \"name\": \"url\",\n          \"label\": \"URL\",\n          \"validation\": {\n            \"reference\": \"slug\"\n          }\n      ]\n    }\n  ]\n}\n```"}}
{"_id":"HZCXfQUPk87ZvFQz","contentType":"page","dirty":false,"title":"Validation","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"validation.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/validation.md","metadata":{"Sequence":"5"},"values":{"title":"Validation","slug":"validation","template":"page.jade","filename":"/:file/index.html","sequence":5,"content":""}}
{"_id":"eLg6FFtwzIoDW50D","contentType":"page","dirty":false,"title":"References","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"references.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/references.md","metadata":{"Sequence":"6"},"values":{"title":"References","slug":"references","template":"page.jade","filename":"/:file/index.html","sequence":6,"content":"Whenever you what to use a reference instead of a value, you'll write `{\"reference\": \"reference_key\"}`, where `reference_key` is the key you gave this snippet of JSON. For example, this:\n\n```\n{\n  \"references\": {\n    \"slug\": [\n      {\n        \"type\": \"required\"\n      },\n      {\n        \"type\": \"pattern\",\n        \"value\": \"^[a-z\\-]+$\"\n      }\n      ]\n    }\n  }\n```\n\nWill let you define a title field in a contentType like this:\n\n```\n{\n  \"contentTypes\": [\n    {\n      \"fields\": [\n        {\n          \"name\": \"url\",\n          \"label\": \"URL\",\n          \"validation\": {\n            \"reference\": \"slug\"\n          }\n      ]\n    }\n  ]\n}\n```"}}
{"_id":"4OzCb3DbKhmb5xVK","contentType":"page","dirty":false,"title":"Calculated Values","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"calculated-values.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/calculated-values.md","metadata":{"Sequence":"6"},"values":{"title":"Calculated Values","slug":"calculations","template":"page.jade","filename":"/:file/index.html","sequence":6,"content":""}}
{"_id":"eLg6FFtwzIoDW50D","contentType":"page","dirty":false,"title":"References","directory":"pages","basedir":"/Users/barrett/Documents/Development/pallium/docs/content","filename":"references.md","fullpath":"/Users/barrett/Documents/Development/pallium/docs/content/pages/references.md","metadata":{"Sequence":"7"},"values":{"title":"References","slug":"references","template":"page.jade","filename":"/:file/index.html","sequence":7,"content":"Whenever you what to use a reference instead of a value, you'll write `{\"reference\": \"reference_key\"}`, where `reference_key` is the key you gave this snippet of JSON. For example, this:\n\n```\n{\n  \"references\": {\n    \"slug\": [\n      {\n        \"type\": \"required\"\n      },\n      {\n        \"type\": \"pattern\",\n        \"value\": \"^[a-z\\-]+$\"\n      }\n      ]\n    }\n  }\n```\n\nWill let you define a title field in a contentType like this:\n\n```\n{\n  \"contentTypes\": [\n    {\n      \"fields\": [\n        {\n          \"name\": \"url\",\n          \"label\": \"URL\",\n          \"validation\": {\n            \"reference\": \"slug\"\n          }\n      ]\n    }\n  ]\n}\n```"}}
